diff --git a/index.d.ts b/index.d.ts
index ab5322f536e9cd4b64bf630f6ee78b4db04a56fb..59a7c8ee8d6294564e39d6bf778cca6258f82251 100644
--- a/index.d.ts
+++ b/index.d.ts
@@ -169,6 +169,10 @@ declare module 'react-native-select-dropdown' {
      * Open the dropdown.
      */
     openDropdown(): void;
+    /**
+     * Checks whenether dropdown is open or not
+     */
+    isOpen(): boolean;
     /**
      * Close the dropdown.
      */
diff --git a/src/SelectDropdown.js b/src/SelectDropdown.js
index 18f66b0546b1f114dda19dc76da732fc875f588c..55604adba3c321026156ad6de076e65458054e6e 100644
--- a/src/SelectDropdown.js
+++ b/src/SelectDropdown.js
@@ -1,16 +1,16 @@
-import React, {forwardRef, useImperativeHandle} from 'react';
-import {View, Text, TouchableOpacity, FlatList} from 'react-native';
-import styles from './styles';
-import {isExist} from './helpers/isExist';
-import {mergeStyles} from './helpers/mergeStyles';
-import Input from './components/Input';
-import DropdownOverlay from './components/DropdownOverlay';
+import React, { forwardRef, useImperativeHandle } from 'react';
+import { FlatList, Text, TouchableOpacity, View } from 'react-native';
 import DropdownModal from './components/DropdownModal';
+import DropdownOverlay from './components/DropdownOverlay';
 import DropdownWindow from './components/DropdownWindow';
-import {useSelectDropdown} from './hooks/useSelectDropdown';
-import {useLayoutDropdown} from './hooks/useLayoutDropdown';
-import {useRefs} from './hooks/useRefs';
-import {findIndexInArr} from './helpers/findIndexInArr';
+import Input from './components/Input';
+import { findIndexInArr } from './helpers/findIndexInArr';
+import { isExist } from './helpers/isExist';
+import { mergeStyles } from './helpers/mergeStyles';
+import { useLayoutDropdown } from './hooks/useLayoutDropdown';
+import { useRefs } from './hooks/useRefs';
+import { useSelectDropdown } from './hooks/useSelectDropdown';
+import styles from './styles';
 
 const SelectDropdown = (
   {
@@ -82,6 +82,7 @@ const SelectDropdown = (
     reset: () => {
       reset();
     },
+    isOpen: () => isVisible,
     openDropdown: () => {
       openDropdown();
     },
