diff --git a/index.d.ts b/index.d.ts
index 59a7c8ee8d6294564e39d6bf778cca6258f82251..1bff530609ff352b53ee05a9379ea535a9d81d6b 100644
--- a/index.d.ts
+++ b/index.d.ts
@@ -1,5 +1,5 @@
 import type * as React from 'react';
-import {StyleProp, ViewStyle, TextStyle} from 'react-native';
+import { StyleProp, TextStyle, ViewStyle } from 'react-native';
 
 declare module 'react-native-select-dropdown' {
   export type SelectDropdownProps<Item = object> = {
@@ -160,7 +160,7 @@ declare module 'react-native-select-dropdown' {
         }
     );
 
-  export default class SelectDropdown extends React.Component<SelectDropdownProps> {
+  export default class SelectDropdown<Item = object> extends React.Component<SelectDropdownProps<Item>> {
     /**
      * Remove selection & reset it to display defaultButtonText check
      */
diff --git a/src/SelectDropdown.js b/src/SelectDropdown.js
index 55604adba3c321026156ad6de076e65458054e6e..060911e29185c12c0e7097063cc01481201cecce 100644
--- a/src/SelectDropdown.js
+++ b/src/SelectDropdown.js
@@ -6,7 +6,6 @@ import DropdownWindow from './components/DropdownWindow';
 import Input from './components/Input';
 import { findIndexInArr } from './helpers/findIndexInArr';
 import { isExist } from './helpers/isExist';
-import { mergeStyles } from './helpers/mergeStyles';
 import { useLayoutDropdown } from './hooks/useLayoutDropdown';
 import { useRefs } from './hooks/useRefs';
 import { useSelectDropdown } from './hooks/useSelectDropdown';
@@ -153,7 +152,7 @@ const SelectDropdown = (
         <TouchableOpacity
           disabled={disabledIndexs?.includes(index)}
           activeOpacity={0.8}
-          style={mergeStyles(styles.dropdownRow, rowStyle, isSelected && selectedRowStyle)}
+          style={[styles.dropdownRow, rowStyle, isSelected && selectedRowStyle]}
           onPress={() => onSelectItem(item, index)}>
           {renderCustomizedRowChild ? (
             <View style={styles.dropdownCustomizedRowParent}>{renderCustomizedRowChild(item, index, isSelected)}</View>
@@ -161,7 +160,7 @@ const SelectDropdown = (
             <Text
               numberOfLines={1}
               allowFontScaling={false}
-              style={mergeStyles(styles.dropdownRowText, rowTextStyle, isSelected && selectedRowTextStyle)}>
+              style={[styles.dropdownRowText, rowTextStyle, isSelected && selectedRowTextStyle]}>
               {rowTextForSelection ? rowTextForSelection(item, index) : item.toString()}
             </Text>
           )}
@@ -201,11 +200,11 @@ const SelectDropdown = (
       ref={dropdownButtonRef}
       disabled={disabled}
       onPress={openDropdown}
-      style={mergeStyles(
+      style={[
         styles.dropdownButton,
         dropdownIconPosition == 'left' ? styles.row : styles.rowRevese,
         buttonStyle,
-      )}>
+      ]}>
       {renderDropdown()}
       {renderDropdownIcon && renderDropdownIcon(isVisible)}
       {renderCustomizedButtonChild ? (
@@ -216,7 +215,7 @@ const SelectDropdown = (
         <Text
           numberOfLines={1}
           allowFontScaling={false}
-          style={mergeStyles(styles.dropdownButtonText, buttonTextStyle)}>
+          style={[styles.dropdownButtonText, buttonTextStyle]}>
           {isExist(selectedItem)
             ? buttonTextAfterSelection
               ? buttonTextAfterSelection(selectedItem, selectedIndex)
